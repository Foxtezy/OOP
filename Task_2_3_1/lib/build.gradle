/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://maven.imagej.net/content/repositories/public/"
    }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

// https://mvnrepository.com/artifact/com.github.AlmasB/AStar
    implementation group: 'com.github.AlmasB', name: 'AStar', version: '1.0.1'

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    modules = ["javafx.controls", "javafx.fxml", "javafx.web"]
    version = "15.0.1"
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
